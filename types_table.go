// Copyright 2014 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen_helper.go,
// DO NOT EDIT!!!

package tiff

var _CompressTypeTable = map[CompressType]string{
	CompressType_CCITT:      `CompressType_CCITT`,
	CompressType_Deflate:    `CompressType_Deflate`,
	CompressType_DeflateOld: `CompressType_DeflateOld`,
	CompressType_G3:         `CompressType_G3`,
	CompressType_G4:         `CompressType_G4`,
	CompressType_JPEG:       `CompressType_JPEG`,
	CompressType_JPEGOld:    `CompressType_JPEGOld`,
	CompressType_LZW:        `CompressType_LZW`,
	CompressType_None:       `CompressType_None`,
	CompressType_PackBits:   `CompressType_PackBits`,
}

var _DataTypeTable = map[DataType]string{
	DataType_ASCII:     `DataType_ASCII`,
	DataType_Byte:      `DataType_Byte`,
	DataType_Complex:   `DataType_Complex`,
	DataType_Double:    `DataType_Double`,
	DataType_Float:     `DataType_Float`,
	DataType_IFD:       `DataType_IFD`,
	DataType_IFD8:      `DataType_IFD8`,
	DataType_Long:      `DataType_Long`,
	DataType_Long8:     `DataType_Long8`,
	DataType_Nil:       `DataType_Nil`,
	DataType_Rational:  `DataType_Rational`,
	DataType_SByte:     `DataType_SByte`,
	DataType_SLong:     `DataType_SLong`,
	DataType_SLong8:    `DataType_SLong8`,
	DataType_SRational: `DataType_SRational`,
	DataType_SShort:    `DataType_SShort`,
	DataType_Short:     `DataType_Short`,
	DataType_Undefined: `DataType_Undefined`,
	DataType_Unicode:   `DataType_Unicode`,
}

var _TagTypeTable = map[TagType]string{
	TagType_BitsPerSample:             `TagType_BitsPerSample`,
	TagType_ColorMap:                  `TagType_ColorMap`,
	TagType_Compression:               `TagType_Compression`,
	TagType_ExtraSamples:              `TagType_ExtraSamples`,
	TagType_ImageLength:               `TagType_ImageLength`,
	TagType_ImageWidth:                `TagType_ImageWidth`,
	TagType_PhotometricInterpretation: `TagType_PhotometricInterpretation`,
	TagType_Predictor:                 `TagType_Predictor`,
	TagType_ResolutionUnit:            `TagType_ResolutionUnit`,
	TagType_RowsPerStrip:              `TagType_RowsPerStrip`,
	TagType_SampleFormat:              `TagType_SampleFormat`,
	TagType_SamplesPerPixel:           `TagType_SamplesPerPixel`,
	TagType_StripByteCounts:           `TagType_StripByteCounts`,
	TagType_StripOffsets:              `TagType_StripOffsets`,
	TagType_TileByteCounts:            `TagType_TileByteCounts`,
	TagType_TileLength:                `TagType_TileLength`,
	TagType_TileOffsets:               `TagType_TileOffsets`,
	TagType_TileWidth:                 `TagType_TileWidth`,
	TagType_XResolution:               `TagType_XResolution`,
	TagType_YResolution:               `TagType_YResolution`,
}
